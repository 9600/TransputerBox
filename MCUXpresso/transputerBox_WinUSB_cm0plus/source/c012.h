#ifndef C012_H
#define C012_H

#include <stdint.h>
#include <stdbool.h>

#define C012_PORT 0

#define C012_PIN_NOTCS 		22
#define C012_PIN_OUTPUT_INT 23
#define C012_PIN_INPUT_INT 	24
#define C012_PIN_RESET 		25

#define C012_D07_SHIFT 		7

#define C012_MASK			0b00000000000111000111111110000000
#define C012_DATA			0b00000000000000000111111110000000
#define C012_R0_W			0b00000000000000000000000000000000
#define C012_R0_R			0b00000000000100000000000000000000
#define C012_R1_W			0b00000000000001000000000000000000
#define C012_R1_R			0b00000000000101000000000000000000
#define C012_R2_W			0b00000000000010000000000000000000
#define C012_R2_R			0b00000000000110000000000000000000
#define C012_R3_W			0b00000000000011000000000000000000
#define C012_R3_R			0b00000000000111000000000000000000

#define C012_INPUT_READY(gpio) \
	gpio->B[C012_PORT][C012_PIN_INPUT_INT]

#define C012_OUTPUT_READY(gpio) \
	gpio->B[C012_PORT][C012_PIN_OUTPUT_INT]

#define C012_READ_DATA(gpio, data) \
	gpio->DIRCLR[C012_PORT] = C012_DATA; \
	gpio->MPIN[C012_PORT] = C012_R0_R; \
	gpio->B[C012_PORT][C012_PIN_NOTCS] = 0; \
	__NOP(); \
	data = GPIO->PIN[C012_PORT] >> C012_D07_SHIFT; \
	gpio->B[C012_PORT][C012_PIN_NOTCS] = 1;

#define C012_WRITE_DATA(gpio, data) \
	gpio->DIRSET[C012_PORT] = C012_DATA; \
	gpio->MPIN[C012_PORT] = C012_R1_W | ((uint32_t)data << C012_D07_SHIFT); \
	gpio->B[C012_PORT][C012_PIN_NOTCS] = 0; \
	gpio->B[C012_PORT][C012_PIN_NOTCS] = 1;

void c012_reset(void);
void c012_power_off(void);

#endif

